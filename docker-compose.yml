services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: news_db
      POSTGRES_USER: news_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-newspass123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U news_user -d news_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports: ["6379:6379"]
    restart: unless-stopped

  api:
    build: ./backend
    env_file: .env
    environment:
      DATABASE_URL: postgresql://news_user:${DB_PASSWORD:-newspass123}@db:5432/news_db
      REDIS_URL: redis://redis:6379
    ports: ["8000:8000"]
    volumes:
      - ./allowed_domains.json:/app/allowed_domains.json:ro
      - ./blocked_domains.json:/app/blocked_domains.json:ro
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    
  web:
    build: ./frontend
    ports: ["3000:80"]
    depends_on: [api]
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
